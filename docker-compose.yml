# docker-compose.yml  (Compose v2+ — no version key needed)

services:
  app:
    container_name: pretix_app
    build:
      context: ./docker/pretix
      dockerfile: Dockerfile
    restart: always
    depends_on:
      - database
      - cache
    environment:
      PRETIX_CONFIG_FILE: /etc/pretix/pretix.cfg
    volumes:
      - pretix_data:/data
      # ⬇️ MUST be a real file in your repo
      - ./docker/pretix/pretix.cfg:/etc/pretix/pretix.cfg:ro
      # ⬇️ Mount the whole nginx dir (avoids "not a directory" error)
      - ./docker/pretix/nginx:/etc/nginx:ro
      # keep your crontab
      - ./docker/pretix/crontab:/tmp/crontab:ro
    # no host ports here; Traefik will route
    networks:
      - backend
      - coolify
    labels:
      - traefik.enable=true
      - traefik.docker.network=coolify
      # use your domain or SERVICE_FQDN_APP if you have it in env
      - traefik.http.routers.pretix.rule=Host(`pretix.weinerlebnistouren-heyl.de`)
      - traefik.http.routers.pretix.entrypoints=https
      - traefik.http.routers.pretix.tls.certresolver=letsencrypt
      # If nginx in the container listens on 80 (typical), keep 80 here:
      - traefik.http.services.pretix.loadbalancer.server.port=80

  database:
    image: postgres:17-alpine3.22
    container_name: database
    restart: always
    environment:
      POSTGRES_USER: pretix
      POSTGRES_PASSWORD: pretix
      POSTGRES_DB: pretix
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      backend:
        aliases: [database]    # explicit, for clarity

  cache:
    image: redis:alpine3.22
    container_name: redis
    restart: always
    networks:
      backend:
        aliases: [redis, cache]  # allow both names to resolve

volumes:
  postgres_data:
  pretix_data:

networks:
  backend:
    driver: bridge
    driver_opts:
      com.docker.network.bridge.host_binding_ipv4: "127.0.0.1"
  coolify:
    external: true
